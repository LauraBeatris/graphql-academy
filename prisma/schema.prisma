generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id          String    @id @default(uuid())
  name        String    @unique
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  posts       Post[]
  @@map("brands")
}

model Post {
  id          String    @id @default(uuid())
  title       String    @unique @db.VarChar(255)
  authorId    String
  brandId     String?
  description String?
  isPublished Boolean   @default(false)
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  brand       Brand?     @relation(fields: [brandId], references: [id], onDelete: Cascade) 
  author      User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments    Comment[] 
  @@map("posts")
}

model User {
  id        String    @id @default(uuid())
  name      String    @unique @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  posts     Post[]
  comments  Comment[]
  @@map("users")
}

model Comment {
  id        String   @id @default(uuid())
  text      String?  @db.VarChar(255)
  postId    String 
  authorId  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post      Post?    @relation(fields: [postId], references: [id], onDelete: Cascade)
  @@map("comments")
}
